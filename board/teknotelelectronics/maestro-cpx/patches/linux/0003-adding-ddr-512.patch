From 1cdf1deea61085bda0bd6da9e7fe139c93b89b56 Mon Sep 17 00:00:00 2001
From: Mahdi Noori <nekorawesh@gmail.com>
Date: Tue, 5 Jan 2021 17:50:56 +0300
Subject: [PATCH] adding ddr 512

---
 arch/arm/boot/dts/maestro-cpx.dts | 420 ++++++++++++++++--------------
 1 file changed, 228 insertions(+), 192 deletions(-)

diff --git a/arch/arm/boot/dts/maestro-cpx.dts b/arch/arm/boot/dts/maestro-cpx.dts
index b9d4c3a0bdce..6ad30fae9241 100755
--- a/arch/arm/boot/dts/maestro-cpx.dts
+++ b/arch/arm/boot/dts/maestro-cpx.dts
@@ -1,6 +1,6 @@
 /* SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause) */
 /*
- * Copyright (C) STMicroelectronics 2020 - All Rights Reserved
+ * Copyright (C) STMicroelectronics 2021 - All Rights Reserved
  * Author: STM32CubeMX code generation for STMicroelectronics.
  */
 
@@ -9,23 +9,20 @@
  */
 
 /dts-v1/;
-/* USER CODE BEGIN includes */
-#include <dt-bindings/gpio/gpio.h>
-#include <dt-bindings/input/input.h>
-#include <dt-bindings/mfd/st,stpmic1.h>
-#include <dt-bindings/rtc/rtc-stm32.h>
-
 #include <dt-bindings/pinctrl/stm32-pinfunc.h>
 
 #include "stm32mp157.dtsi"
 #include "stm32mp15xa.dtsi"
 #include "stm32mp15xxab-pinctrl.dtsi"
 #include "stm32mp157-m4-srm.dtsi"
+
+/* USER CODE BEGIN includes */
+#include <dt-bindings/mfd/st,stpmic1.h>
 /* USER CODE END includes */
 
 / {
 	model = "Teknotel Electronics Maestro CPX";
-	compatible = "st,maestro-cpx", "st,stm32mp157";
+	compatible = "st,stm32mp157a-maestro-cpx", "st,stm32mp157";
 
 	memory@c0000000 {
 		device_type = "memory";
@@ -76,12 +73,12 @@
 			reg = <0x38000000 0x10000>;
 			no-map;
 		};
-		/* USER CODE END reserved-memory */
 
 		gpu_reserved: gpu@da000000 {
 			reg = <0xda000000 0x4000000>;
 			no-map;
 		};
+		/* USER CODE END reserved-memory */
 	};
 
 	/* USER CODE BEGIN root */
@@ -140,30 +137,30 @@
 		/* USER CODE BEGIN clocks */
 		/* USER CODE END clocks */
 
+#ifndef CONFIG_STM32MP1_TRUSTED
 		clk_lsi: clk-lsi {
 			clock-frequency = <32000>;
 		};
-
 		clk_hsi: clk-hsi {
 			clock-frequency = <64000000>;
 		};
-
 		clk_csi: clk-csi {
 			clock-frequency = <4000000>;
 		};
-
 		clk_lse: clk-lse {
 			clock-frequency = <32768>;
 		};
-
 		clk_hse: clk-hse {
 			clock-frequency = <24000000>;
 		};
+#endif	/*CONFIG_STM32MP1_TRUSTED*/
 	};
 
 }; /*root*/
 
 &pinctrl {
+	u-boot,dm-pre-reloc;
+
 	eth1_pins_mx: eth1_mx-0 {
 		pins1 {
 			pinmux = <STM32_PINMUX('A', 0, AF11)>, /* ETH1_CRS */
@@ -221,6 +218,26 @@
 		};
 	};
 
+	fdcan2_pins_mx: fdcan2_mx-0 {
+		pins1 {
+			pinmux = <STM32_PINMUX('B', 5, AF9)>; /* FDCAN2_RX */
+			bias-disable;
+		};
+		pins2 {
+			pinmux = <STM32_PINMUX('B', 6, AF9)>; /* FDCAN2_TX */
+			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
+		};
+	};
+
+	fdcan2_sleep_pins_mx: fdcan2_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('B', 5, ANALOG)>, /* FDCAN2_RX */
+					 <STM32_PINMUX('B', 6, ANALOG)>; /* FDCAN2_TX */
+		};
+	};
+
 	i2c1_pins_mx: i2c1_mx-0 {
 		pins {
 			pinmux = <STM32_PINMUX('B', 7, AF4)>, /* I2C1_SDA */
@@ -238,6 +255,23 @@
 		};
 	};
 
+	i2c2_pins_mx: i2c2_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('D', 7, AF4)>, /* I2C2_SCL */
+					 <STM32_PINMUX('G', 15, AF4)>; /* I2C2_SDA */
+			bias-disable;
+			drive-open-drain;
+			slew-rate = <0>;
+		};
+	};
+
+	i2c2_sleep_pins_mx: i2c2_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('D', 7, ANALOG)>, /* I2C2_SCL */
+					 <STM32_PINMUX('G', 15, ANALOG)>; /* I2C2_SDA */
+		};
+	};
+
 	i2c4_pins_mx: i2c4_mx-0 {
 		u-boot,dm-pre-reloc;
 		pins {
@@ -261,65 +295,31 @@
 
 	m4_fdcan1_pins_mx: m4_fdcan1_mx-0 {
 		pins {
-			pinmux = <STM32_PINMUX('A', 11, ANALOG)>, /* FDCAN1_RX */
-					 <STM32_PINMUX('A', 12, ANALOG)>; /* FDCAN1_TX */
-		};
-	};
-
-	fdcan2_pins_mx: fdcan2_mx-0 {
-		pins1 {
-			pinmux = <STM32_PINMUX('B', 5, AF9)>; /* FDCAN2_RX */
-			bias-disable;
-		};
-		pins2 {
-			pinmux = <STM32_PINMUX('B', 6, AF9)>; /* FDCAN2_TX */
-			bias-disable;
-			drive-push-pull;
-			slew-rate = <0>;
-		};
-	};
-
-	fdcan2_sleep_pins_mx: fdcan2_sleep_mx-0 {
-		pins {
-			pinmux = <STM32_PINMUX('B', 5, ANALOG)>, /* FDCAN2_RX */
-					 <STM32_PINMUX('B', 6, ANALOG)>; /* FDCAN2_TX */
-		};
-	};
-
-	m4_i2c2_pins_mx: m4_i2c2_mx-0 {
-		pins {
-			pinmux = <STM32_PINMUX('D', 7, ANALOG)>, /* I2C2_SCL */
-					 <STM32_PINMUX('G', 15, ANALOG)>; /* I2C2_SDA */
+			pinmux = <STM32_PINMUX('A', 11, RSVD)>, /* FDCAN1_RX */
+					 <STM32_PINMUX('A', 12, RSVD)>; /* FDCAN1_TX */
 		};
 	};
 
 	m4_i2c5_pins_mx: m4_i2c5_mx-0 {
 		pins {
-			pinmux = <STM32_PINMUX('D', 0, ANALOG)>, /* I2C5_SDA */
-					 <STM32_PINMUX('D', 1, ANALOG)>; /* I2C5_SCL */
+			pinmux = <STM32_PINMUX('D', 0, RSVD)>, /* I2C5_SDA */
+					 <STM32_PINMUX('D', 1, RSVD)>; /* I2C5_SCL */
 		};
 	};
 
 	m4_spi4_pins_mx: m4_spi4_mx-0 {
 		pins {
-			pinmux = <STM32_PINMUX('E', 6, ANALOG)>, /* SPI4_MOSI */
-					 <STM32_PINMUX('E', 11, ANALOG)>, /* SPI4_NSS */
-					 <STM32_PINMUX('E', 12, ANALOG)>, /* SPI4_SCK */
-					 <STM32_PINMUX('E', 13, ANALOG)>; /* SPI4_MISO */
-		};
-	};
-
-	m4_usart2_pins_mx: m4_usart2_mx-0 {
-		pins {
-			pinmux = <STM32_PINMUX('D', 5, ANALOG)>, /* USART2_TX */
-					 <STM32_PINMUX('D', 6, ANALOG)>; /* USART2_RX */
+			pinmux = <STM32_PINMUX('E', 6, RSVD)>, /* SPI4_MOSI */
+					 <STM32_PINMUX('E', 11, RSVD)>, /* SPI4_NSS */
+					 <STM32_PINMUX('E', 12, RSVD)>, /* SPI4_SCK */
+					 <STM32_PINMUX('E', 13, RSVD)>; /* SPI4_MISO */
 		};
 	};
 
 	sdmmc1_pins_mx: sdmmc1_mx-0 {
-		u-boot,dm-spl;
+		u-boot,dm-pre-reloc;
 		pins1 {
-			u-boot,dm-spl;
+			u-boot,dm-pre-reloc;
 			pinmux = <STM32_PINMUX('C', 8, AF12)>, /* SDMMC1_D0 */
 					 <STM32_PINMUX('C', 9, AF12)>, /* SDMMC1_D1 */
 					 <STM32_PINMUX('C', 10, AF12)>, /* SDMMC1_D2 */
@@ -330,7 +330,7 @@
 			slew-rate = <1>;
 		};
 		pins2 {
-			u-boot,dm-spl;
+			u-boot,dm-pre-reloc;
 			pinmux = <STM32_PINMUX('C', 12, AF12)>; /* SDMMC1_CK */
 			bias-disable;
 			drive-push-pull;
@@ -339,9 +339,9 @@
 	};
 
 	sdmmc1_opendrain_pins_mx: sdmmc1_opendrain_mx-0 {
-		u-boot,dm-spl;
+		u-boot,dm-pre-reloc;
 		pins1 {
-			u-boot,dm-spl;
+			u-boot,dm-pre-reloc;
 			pinmux = <STM32_PINMUX('C', 8, AF12)>, /* SDMMC1_D0 */
 					 <STM32_PINMUX('C', 9, AF12)>, /* SDMMC1_D1 */
 					 <STM32_PINMUX('C', 10, AF12)>, /* SDMMC1_D2 */
@@ -351,14 +351,14 @@
 			slew-rate = <1>;
 		};
 		pins2 {
-			u-boot,dm-spl;
+			u-boot,dm-pre-reloc;
 			pinmux = <STM32_PINMUX('C', 12, AF12)>; /* SDMMC1_CK */
 			bias-disable;
 			drive-push-pull;
 			slew-rate = <2>;
 		};
 		pins3 {
-			u-boot,dm-spl;
+			u-boot,dm-pre-reloc;
 			pinmux = <STM32_PINMUX('D', 2, AF12)>; /* SDMMC1_CMD */
 			bias-disable;
 			drive-open-drain;
@@ -367,9 +367,9 @@
 	};
 
 	sdmmc1_sleep_pins_mx: sdmmc1_sleep_mx-0 {
-		u-boot,dm-spl;
+		u-boot,dm-pre-reloc;
 		pins {
-			u-boot,dm-spl;
+			u-boot,dm-pre-reloc;
 			pinmux = <STM32_PINMUX('C', 8, ANALOG)>, /* SDMMC1_D0 */
 					 <STM32_PINMUX('C', 9, ANALOG)>, /* SDMMC1_D1 */
 					 <STM32_PINMUX('C', 10, ANALOG)>, /* SDMMC1_D2 */
@@ -380,9 +380,9 @@
 	};
 
 	sdmmc2_b4_pins_mx: sdmmc2_b4_mx-0 {
-		u-boot,dm-spl;
+		u-boot,dm-pre-reloc;
 		pins1 {
-			u-boot,dm-spl;
+			u-boot,dm-pre-reloc;
 			pinmux = <STM32_PINMUX('B', 14, AF9)>, /* SDMMC2_D0 */
 					 <STM32_PINMUX('B', 15, AF9)>, /* SDMMC2_D1 */
 					 <STM32_PINMUX('B', 3, AF9)>, /* SDMMC2_D2 */
@@ -393,7 +393,7 @@
 			bias-pull-up;
 		};
 		pins2 {
-			u-boot,dm-spl;
+			u-boot,dm-pre-reloc;
 			pinmux = <STM32_PINMUX('E', 3, AF9)>; /* SDMMC2_CK */
 			slew-rate = <2>;
 			drive-push-pull;
@@ -402,9 +402,9 @@
 	};
 
 	sdmmc2_b4_opendrain_pins_mx: sdmmc2_b4_opendrain_mx-0 {
-		u-boot,dm-spl;
+		u-boot,dm-pre-reloc;
 		pins1 {
-			u-boot,dm-spl;
+			u-boot,dm-pre-reloc;
 			pinmux = <STM32_PINMUX('B', 14, AF9)>, /* SDMMC2_D0 */
 					 <STM32_PINMUX('B', 15, AF9)>, /* SDMMC2_D1 */
 					 <STM32_PINMUX('B', 3, AF9)>, /* SDMMC2_D2 */
@@ -414,14 +414,14 @@
 			bias-pull-up;
 		};
 		pins2 {
-			u-boot,dm-spl;
+			u-boot,dm-pre-reloc;
 			pinmux = <STM32_PINMUX('E', 3, AF9)>; /* SDMMC2_CK */
 			slew-rate = <2>;
 			drive-push-pull;
 			bias-pull-up;
 		};
 		pins3 {
-			u-boot,dm-spl;
+			u-boot,dm-pre-reloc;
 			pinmux = <STM32_PINMUX('G', 6, AF10)>; /* SDMMC2_CMD */
 			slew-rate = <1>;
 			drive-open-drain;
@@ -430,9 +430,9 @@
 	};
 
 	sdmmc2_b4_sleep_pins_mx: sdmmc2_b4_sleep_mx-0 {
-		u-boot,dm-spl;
+		u-boot,dm-pre-reloc;
 		pins {
-			u-boot,dm-spl;
+			u-boot,dm-pre-reloc;
 			pinmux = <STM32_PINMUX('B', 14, ANALOG)>, /* SDMMC2_D0 */
 					 <STM32_PINMUX('B', 15, ANALOG)>, /* SDMMC2_D1 */
 					 <STM32_PINMUX('B', 3, ANALOG)>, /* SDMMC2_D2 */
@@ -443,9 +443,9 @@
 	};
 
 	sdmmc2_d47_pins_mx: sdmmc2_d47_mx-0 {
-		u-boot,dm-spl;
+		u-boot,dm-pre-reloc;
 		pins1 {
-			u-boot,dm-spl;
+			u-boot,dm-pre-reloc;
 			pinmux = <STM32_PINMUX('A', 8, AF9)>, /* SDMMC2_D4 */
 					 <STM32_PINMUX('B', 9, AF10)>, /* SDMMC2_D5 */
 					 <STM32_PINMUX('E', 5, AF9)>, /* SDMMC2_D6 */
@@ -457,9 +457,9 @@
 	};
 
 	sdmmc2_d47_sleep_pins_mx: sdmmc2_d47_sleep_mx-0 {
-		u-boot,dm-spl;
+		u-boot,dm-pre-reloc;
 		pins {
-			u-boot,dm-spl;
+			u-boot,dm-pre-reloc;
 			pinmux = <STM32_PINMUX('A', 8, ANALOG)>, /* SDMMC2_D4 */
 					 <STM32_PINMUX('B', 9, ANALOG)>, /* SDMMC2_D5 */
 					 <STM32_PINMUX('E', 5, ANALOG)>, /* SDMMC2_D6 */
@@ -487,17 +487,23 @@
 		};
 	};
 
-	uart4_idle_pins_mx: uart4_idle_mx-0 {
+	uart8_pins_mx: uart8_mx-0 {
+		u-boot,dm-pre-reloc;
 		pins1 {
-			pinmux = <STM32_PINMUX('A', 13, ANALOG)>; /* UART4_TX */
+			u-boot,dm-pre-reloc;
+			pinmux = <STM32_PINMUX('E', 0, AF8)>; /* UART8_RX */
+			bias-disable;
 		};
 		pins2 {
-			pinmux = <STM32_PINMUX('B', 2, AF8)>; /* UART4_RX */
+			u-boot,dm-pre-reloc;
+			pinmux = <STM32_PINMUX('E', 1, AF8)>; /* UART8_TX */
 			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
 		};
 	};
 
-	uart8_pins_mx: uart8_mx-0 {
+	uart8_idle_pins_mx: uart8_idle_mx-0 {
 		u-boot,dm-pre-reloc;
 		pins1 {
 			u-boot,dm-pre-reloc;
@@ -506,10 +512,7 @@
 		};
 		pins2 {
 			u-boot,dm-pre-reloc;
-			pinmux = <STM32_PINMUX('E', 1, AF8)>; /* UART8_TX */
-			bias-disable;
-			drive-push-pull;
-			slew-rate = <0>;
+			pinmux = <STM32_PINMUX('E', 1, ANALOG)>; /* UART8_TX */
 		};
 	};
 
@@ -522,16 +525,23 @@
 		};
 	};
 
-	uart8_idle_pins_mx: uart8_idle_mx-0 {
-		u-boot,dm-pre-reloc;
+	usart2_pins_mx: usart2_mx-0 {
 		pins1 {
-			u-boot,dm-pre-reloc;
-			pinmux = <STM32_PINMUX('E', 0, AF8)>; /* UART8_RX */
+			pinmux = <STM32_PINMUX('D', 5, AF7)>; /* USART2_TX */
 			bias-disable;
+			drive-push-pull;
+			slew-rate = <0>;
 		};
 		pins2 {
-			u-boot,dm-pre-reloc;
-			pinmux = <STM32_PINMUX('E', 1, ANALOG)>; /* UART8_TX */
+			pinmux = <STM32_PINMUX('D', 6, AF7)>; /* USART2_RX */
+			bias-disable;
+		};
+	};
+
+	usart2_sleep_pins_mx: usart2_sleep_mx-0 {
+		pins {
+			pinmux = <STM32_PINMUX('D', 5, ANALOG)>, /* USART2_TX */
+					 <STM32_PINMUX('D', 6, ANALOG)>; /* USART2_RX */
 		};
 	};
 
@@ -555,24 +565,18 @@
 		};
 	};
 
-	usart3_idle_pins_mx: usart3_idle_mx-0 {
-		pins1 {
-			pinmux = <STM32_PINMUX('D', 8, ANALOG)>; /* USART3_TX */
-		};
-		pins2 {
-			pinmux = <STM32_PINMUX('D', 9, AF7)>; /* USART3_RX */
-			bias-disable;
-		};
-	};
-
 	usb_otg_hs_pins_mx: usb_otg_hs_mx-0 {
+		u-boot,dm-pre-reloc;
 		pins {
+			u-boot,dm-pre-reloc;
 			pinmux = <STM32_PINMUX('A', 10, ANALOG)>; /* USB_OTG_HS_ID */
 		};
 	};
 
 	usb_otg_hs_sleep_pins_mx: usb_otg_hs_sleep_mx-0 {
+		u-boot,dm-pre-reloc;
 		pins {
+			u-boot,dm-pre-reloc;
 			pinmux = <STM32_PINMUX('A', 10, ANALOG)>; /* USB_OTG_HS_ID */
 		};
 	};
@@ -592,10 +596,11 @@
 	/*Restriction: "memory-region" property is not managed - please to use User-Section if needed*/
 	mboxes = <&ipcc 0>, <&ipcc 1>, <&ipcc 2>;
 	mbox-names = "vq0", "vq1", "shutdown";
-	recovery;
 	status = "okay";
 
 	/* USER CODE BEGIN m4_rproc */
+	memory-region = <&retram>, <&mcuram>, <&mcuram2>, <&vdev0vring0>,
+		<&vdev0vring1>, <&vdev0buffer>;
 	interrupt-parent = <&exti>;
 	interrupts = <68 1>;
 	interrupt-names = "wdg";
@@ -624,10 +629,74 @@
 	/* USER CODE END crc1 */
 };
 
+&dma1{
+	status = "okay";
+
+	/* USER CODE BEGIN dma1 */
+	sram = <&dma_pool>;
+	/* USER CODE END dma1 */
+};
+
+&dma2{
+	status = "disabled";
+
+	/* USER CODE BEGIN dma2 */
+	sram = <&dma_pool>;
+	/* USER CODE END dma2 */
+};
+
+&dmamux1{
+
+	dma-masters = <&dma1>;
+	dma-channels = <8>;
+
+	status = "okay";
+
+	/* USER CODE BEGIN dmamux1 */
+	/* USER CODE END dmamux1 */
+};
+
 &dsi{
 	status = "okay";
 
 	/* USER CODE BEGIN dsi */
+	#address-cells = <1>;
+	#size-cells = <0>;
+	status = "okay";
+
+	ports {
+		#address-cells = <1>;
+		#size-cells = <0>;
+
+		port@0 {
+			reg = <0>;
+			dsi_in: endpoint {
+				remote-endpoint = <&ltdc_ep1_out>;
+			};
+		};
+
+		port@1 {
+			reg = <1>;
+			dsi_out: endpoint {
+				remote-endpoint = <&panel_in>;
+			};
+		};
+	};
+
+	panel: panel@0 {
+		compatible = "orisetech,otm8009a";
+		reg = <0>;
+		reset-gpios = <&gpioe 4 GPIO_ACTIVE_LOW>;
+		power-supply = <&v3v3>;
+		backlight = <&panel_backlight>;
+		status = "okay";
+
+		port {
+			panel_in: endpoint {
+				remote-endpoint = <&dsi_out>;
+			};
+		};
+	};
 	/* USER CODE END dsi */
 };
 
@@ -650,7 +719,6 @@
 	snps,reset-active-low = <1>;
 	local-mac-address = [00 80 ea 42 69 eb];
 	phy-mode = "mii";
-	max-speed = <100>;
 	phy-handle = <&phy0>;
 
 	mdio0 {
@@ -673,6 +741,7 @@
 };
 
 &hash1{
+	u-boot,dm-pre-reloc;
 	status = "okay";
 
 	/* USER CODE BEGIN hash1 */
@@ -723,6 +792,16 @@
 	/* USER CODE END i2c1 */
 };
 
+&i2c2{
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&i2c2_pins_mx>;
+	pinctrl-1 = <&i2c2_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN i2c2 */
+	/* USER CODE END i2c2 */
+};
+
 &i2c4{
 	u-boot,dm-pre-reloc;
 	pinctrl-names = "default", "sleep";
@@ -862,7 +941,7 @@
 };
 
 &iwdg2{
-	status = "disabled";
+	status = "okay";
 
 	/* USER CODE BEGIN iwdg2 */
 	timeout-sec = <32>;
@@ -885,6 +964,16 @@
 	/* USER CODE END ltdc */
 };
 
+&m_can2{
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&fdcan2_pins_mx>;
+	pinctrl-1 = <&fdcan2_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN m_can2 */
+	/* USER CODE END m_can2 */
+};
+
 &m4_crc2{
 	status = "okay";
 
@@ -892,20 +981,18 @@
 	/* USER CODE END m4_crc2 */
 };
 
-&m4_hash2{
+&m4_dma2{
 	status = "okay";
 
-	/* USER CODE BEGIN m4_hash2 */
-	/* USER CODE END m4_hash2 */
+	/* USER CODE BEGIN m4_dma2 */
+	/* USER CODE END m4_dma2 */
 };
 
-&m4_i2c2{
-	pinctrl-names = "default";
-	pinctrl-0 = <&m4_i2c2_pins_mx>;
+&m4_hash2{
 	status = "okay";
 
-	/* USER CODE BEGIN m4_i2c2 */
-	/* USER CODE END m4_i2c2 */
+	/* USER CODE BEGIN m4_hash2 */
+	/* USER CODE END m4_hash2 */
 };
 
 &m4_i2c5{
@@ -926,16 +1013,6 @@
 	/* USER CODE END m4_m_can1 */
 };
 
-&m_can2{
-	pinctrl-names = "default", "sleep";
-	pinctrl-0 = <&fdcan2_pins_mx>;
-	pinctrl-1 = <&fdcan2_sleep_pins_mx>;
-	status = "okay";
-
-	/* USER CODE BEGIN m_can2 */
-	/* USER CODE END m_can2 */
-};
-
 &m4_rng2{
 	status = "okay";
 
@@ -952,13 +1029,11 @@
 	/* USER CODE END m4_spi4 */
 };
 
-&m4_usart2{
-	pinctrl-names = "default";
-	pinctrl-0 = <&m4_usart2_pins_mx>;
+&mdma1{
 	status = "okay";
 
-	/* USER CODE BEGIN m4_usart2 */
-	/* USER CODE END m4_usart2 */
+	/* USER CODE BEGIN mdma1 */
+	/* USER CODE END mdma1 */
 };
 
 &pwr_regulators{
@@ -993,7 +1068,7 @@
 };
 
 &sdmmc1{
-	u-boot,dm-spl;
+	u-boot,dm-pre-reloc;
 	pinctrl-names = "default", "opendrain", "sleep";
 	pinctrl-0 = <&sdmmc1_pins_mx>;
 	pinctrl-1 = <&sdmmc1_opendrain_pins_mx>;
@@ -1009,6 +1084,7 @@
 };
 
 &sdmmc2{
+	u-boot,dm-pre-reloc;
 	pinctrl-names = "default", "opendrain", "sleep";
 	pinctrl-0 = <&sdmmc2_b4_pins_mx &sdmmc2_d47_pins_mx>;
 	pinctrl-1 = <&sdmmc2_b4_opendrain_pins_mx &sdmmc2_d47_pins_mx>;
@@ -1024,8 +1100,6 @@
 	vmmc-supply = <&v3v3>;
 	vqmmc-supply = <&vdd>;
 	mmc-ddr-3_3v;
-	no-1-8-v;
-	disable-wp;
 	/* USER CODE END sdmmc2 */
 };
 
@@ -1040,7 +1114,6 @@
 	status = "okay";
 
 	/* USER CODE BEGIN timers6 */
-	/* spare dmas for other usage */
 	/delete-property/dmas;
 	/delete-property/dma-names;
 	timer@5 {
@@ -1050,10 +1123,9 @@
 };
 
 &uart4{
-	pinctrl-names = "default", "sleep", "idle";
+	pinctrl-names = "default", "sleep";
 	pinctrl-0 = <&uart4_pins_mx>;
 	pinctrl-1 = <&uart4_sleep_pins_mx>;
-	pinctrl-2 = <&uart4_idle_pins_mx>;
 	status = "okay";
 
 	/* USER CODE BEGIN uart4 */
@@ -1077,11 +1149,22 @@
 	/* USER CODE END uart8 */
 };
 
+&usart2{
+	pinctrl-names = "default", "sleep";
+	pinctrl-0 = <&usart2_pins_mx>;
+	pinctrl-1 = <&usart2_sleep_pins_mx>;
+	status = "okay";
+
+	/* USER CODE BEGIN usart2 */
+	/delete-property/dmas;
+	/delete-property/dma-names;
+	/* USER CODE END usart2 */
+};
+
 &usart3{
-	pinctrl-names = "default", "sleep", "idle";
+	pinctrl-names = "default", "sleep";
 	pinctrl-0 = <&usart3_pins_mx>;
 	pinctrl-1 = <&usart3_sleep_pins_mx>;
-	pinctrl-2 = <&usart3_idle_pins_mx>;
 	status = "okay";
 
 	/* USER CODE BEGIN usart3 */
@@ -1100,8 +1183,10 @@
 };
 
 &usbotg_hs{
-	pinctrl-names = "default";
+	u-boot,dm-pre-reloc;
+	pinctrl-names = "default", "sleep";
 	pinctrl-0 = <&usb_otg_hs_pins_mx>;
+	pinctrl-1 = <&usb_otg_hs_sleep_pins_mx>;
 	status = "okay";
 
 	/* USER CODE BEGIN usbotg_hs */
@@ -1113,26 +1198,30 @@
 };
 
 &usbphyc{
+	u-boot,dm-pre-reloc;
 	status = "okay";
 
 	/* USER CODE BEGIN usbphyc */
-	vdd3v3-supply = <&vdd_usb>;
 	/* USER CODE END usbphyc */
 };
 
 &usbphyc_port0{
+	u-boot,dm-pre-reloc;
+	status = "okay";
 
 	/* USER CODE BEGIN usbphyc_port0 */
-	phy-supply = <&vdd_usb>; 
 	st,phy-tuning = <&usb_phy_tuning>;
+	phy-supply = <&vdd_usb>;
 	/* USER CODE END usbphyc_port0 */
 };
 
 &usbphyc_port1{
+	u-boot,dm-pre-reloc;
+	status = "okay";
 
 	/* USER CODE BEGIN usbphyc_port1 */
-	phy-supply = <&vdd_usb>; 
 	st,phy-tuning = <&usb_phy_tuning>;
+	phy-supply = <&vdd_usb>;
 	/* USER CODE END usbphyc_port1 */
 };
 
@@ -1147,51 +1236,6 @@
 };
 
 /* USER CODE BEGIN addons */
-&dsi {
-	#address-cells = <1>;
-	#size-cells = <0>;
-	status = "okay";
-
-	ports {
-		#address-cells = <1>;
-		#size-cells = <0>;
-
-		port@0 {
-			reg = <0>;
-			dsi_in: endpoint {
-				remote-endpoint = <&ltdc_ep1_out>;
-			};
-		};
-
-		port@1 {
-			reg = <1>;
-			dsi_out: endpoint {
-				remote-endpoint = <&panel_in>;
-			};
-		};
-	};
-
-	panel: panel@0 {
-		compatible = "orisetech,otm8009a";
-		reg = <0>;
-		reset-gpios = <&gpioe 4 GPIO_ACTIVE_LOW>;
-		power-supply = <&v3v3>;
-		backlight = <&panel_backlight>;
-		status = "okay";
-
-		port {
-			panel_in: endpoint {
-				remote-endpoint = <&dsi_out>;
-			};
-		};
-	};
-};
-
-&m4_rproc {
-memory-region = <&retram>, <&mcuram>, <&mcuram2>, <&vdev0vring0>,
-		<&vdev0vring1>, <&vdev0buffer>;
-};
-
 &cpu0{
 	cpu-supply = <&vddcore>;
 };
@@ -1206,13 +1250,5 @@ memory-region = <&retram>, <&mcuram>, <&mcuram2>, <&vdev0vring0>,
 		pool;
 	};
 };
-
-&dma1 {
-	sram = <&dma_pool>;
-};
-
-&dma2 {
-	sram = <&dma_pool>;
-};
 /* USER CODE END addons */
 
-- 
2.30.0

